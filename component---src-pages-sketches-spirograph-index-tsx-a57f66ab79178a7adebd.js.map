{"version":3,"sources":["webpack:///./src/geometry/polypoints.ts","webpack:///./src/geometry/PointClass.ts","webpack:///./src/sketches/spirograph/sketchSettings.ts","webpack:///./src/sketches/spirograph/index.ts","webpack:///./src/pages/sketches/spirograph/index.tsx","webpack:///./src/components/RangeInput/styles.ts","webpack:///./src/components/RangeInput/index.tsx","webpack:///./src/components/Toggle/styles.tsx","webpack:///./src/components/Toggle/index.tsx","webpack:///./src/components/SettingsPanel/styles.tsx","webpack:///./src/components/SettingsPanel/controls.tsx","webpack:///./src/components/SettingsPanel/index.tsx"],"names":["polypoints","v","c","r","a","PointClass","Math","PI","points","i","push","x","sin","y","cos","this","Number","toFixed","sketchSettings","polygonsNumber","type","value","props","min","max","step","title","defaultSettings","settingsTransformer","toObject","sketch","settings","p","WindowCenter","windowWidth","windowHeight","branches","startRadius","setup","createCanvas","noStroke","draw","clear","background","SketchFrame$","React","memo","useState","setSettings","className","FullscreenDemo","top","left","PageTitle","to","right","SettingsPanel","onChange","P5Sketch","styled","div","Colors","CSS","bg","RangeWrapper$","theme","showLimits","text","Easings","quadratic","withLabel","Label$","gray80","InputElement$","input","gray20","isWide","showValue","blue","thumbSize","gray40","getValueOffset","thumbOffset","css","ValueNumber$","span","Limits$","gray60","RangeInput","label","handleChange","initialValue","values","setValue","rangeDiff","e","currentTarget","ToggleWrapper$","Toggle$","button","withText","gray10","Pin$","isActive","Icon$","Toggle","defaultValue","children","setState","onClick","Layout$","Media","Phone","SettingsHeader$","SettingsControls$","showControls","SettingsItem$","Controls","range","keyName","item","updateValue","key","toggle","Boolean","setShowControls","updateSettingsItemValue","updatedItem","useEffect","Object","keys","map"],"mappings":"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","file":"component---src-pages-sketches-spirograph-index-tsx-a57f66ab79178a7adebd.js","sourcesContent":["import PointClass from 'geometry/PointClass'\n\n/**\n * Polypoints returns array of points of polygon\n * \n * @param v — number of vertices\n * @param c — polygon center point\n * @param r — polygon radius\n * @param a — start angle in radians\n */\n\nexport default function polypoints(\n  v: number = 3,\n  c: Point  = new PointClass(0, 0),\n  r: number = 100,\n  a: number = Math.PI/2\n): Point[] {\n  const points: Point[] = []\n\n  for (let i = 0; i < v; i++) {\n    points.push({\n      x: c.x + Math.sin(a + (Math.PI*2/v) * i) * r, \n      y: c.y + Math.cos(a + (Math.PI*2/v) * i) * r\n    })\n  }\n\n  return points\n}","export default class PointClass {\n  x: number\n  y: number\n  \n  constructor(x: number, y: number) {\n    this.x = Number(x.toFixed(0))\n    this.y = Number(y.toFixed(0))\n  }\n}","const sketchSettings: ISettingsList = {\n  polygonsNumber: {\n    type: 'range',\n    value: 5,\n    props: {\n      min: 1,\n      max: 15,\n      step: 1\n    },\n    title: 'Lines'\n  }\n}\n\nexport default sketchSettings","import p5 from \"p5\"\nimport polypoints from 'geometry/polypoints'\nimport settingsTransformer from 'utils/settingsTransformer'\nimport sketchSettings from './sketchSettings'\nimport PointClass from \"geometry/PointClass\"\n\nexport interface ISketchSettings {\n  branches?: number,\n  startRadius?: number\n}\n\nexport const defaultSettings = settingsTransformer.toObject<ISketchSettings>(sketchSettings)\n\ninterface ISine {\n  amplitude: number,\n  \n}\n\nconst sketch = (settings: ISketchSettings) => (p: p5) => {\n  const WindowCenter = new PointClass(p.windowWidth / 2, p.windowHeight / 2)\n\n  const StartPoints = polypoints(settings.branches, WindowCenter, settings.startRadius, Math.PI/2)\n  const sines = []\n\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight)\n    p.noStroke()\n  }\n  \n  p.draw = () => {\n    p.clear()\n    p.background('#fff')\n  }\n}\n\nexport default sketch","import React, { useState, FunctionComponent } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport FullscreenDemo from 'layouts/FullscreenDemo'\nimport { Interface$, Corner$ } from 'layouts/FullscreenDemo/styles'\nimport { Colors } from 'constants/Styles'\nimport P5Sketch from 'components/P5Sketch'\nimport PageTitle from 'components/PageTitle'\nimport SettingsPanel from 'components/SettingsPanel'\nimport sketch, { defaultSettings } from 'sketches/spirograph'\nimport sketchSettings from 'sketches/spirograph/sketchSettings'\nimport SEO from 'components/seo'\n\nconst SineSeries1: FunctionComponent = () => {\n  const [settings, setSettings] = useState(defaultSettings)\n\n  return (\n    <div className=\"light-theme\">\n      <SEO title=\"«Spirograph» animation\" />\n\n      <FullscreenDemo>\n        <Interface$>\n          <Corner$ top left>\n            <PageTitle title='Spirograph' />\n            <Link to=\"/\">Home</Link>\n          </Corner$>\n\n          <Corner$ top right> \n            <SettingsPanel onChange={setSettings} settings={sketchSettings} />\n          </Corner$>\n        </Interface$>\n\n        <SketchFrame$>\n          <P5Sketch sketch={sketch(settings)} />\n        </SketchFrame$>\n      </FullscreenDemo>\n    </div>\n  )\n}\n\nexport default React.memo(SineSeries1)\n\n//#region Styled\nconst SketchFrame$ = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  line-height: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  background-color: ${Colors.CSS.bg}\n`\n//#endregion","import styled, { css } from 'styled-components'\nimport { Colors, Easings } from 'constants/Styles'\n\nconst gapSize = 15\nconst thumbSize = 28\n\ninterface RangeThemePropsI {\n  theme: {\n    showValue: boolean,\n    isWide: boolean,\n    thumbOffset: number,\n    showLimits: boolean,\n    withLabel: boolean\n  }\n}\n\nexport const RangeWrapper$ = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  cursor: pointer;\n  margin-bottom: ${({ theme }) => theme.showLimits ? 14 : 0}px;\n\n  span {\n    color: ${Colors.CSS.text};\n    transition: color .2s ease, transform .2s ${Easings.quadratic};\n  }\n\n  &:focus-within:not(:hover) {\n    span {\n      color: ${Colors.CSS.bg};\n    }\n  }\n\n  &:hover {\n    span {\n      transform: ${({ theme }: RangeThemePropsI) => !theme.withLabel && `translateY(-${thumbSize - 2}px)` };\n    }\n  }\n`\n\nexport const Label$ = styled.div`\n  font-size: 12px;\n  line-height: 1.5;\n  font-weight: 500;\n  font-family: sans-serif;\n  color: ${Colors.CSS.gray80};\n`\n\nexport const InputElement$ = styled.input`\n  width: 100%;\n  height: ${thumbSize}px;\n  background: transparent;\n  -webkit-appearance: none;\n\n  &[type=range]:focus {\n    outline: none;\n  }\n\n  /* #region webkit styles */\n  &[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 4px;\n    cursor: pointer;\n    background: ${Colors.CSS.gray20};\n    border-radius: 2px;\n  }\n  \n  &[type=range]::-webkit-slider-thumb {\n    border: none;\n    height: ${thumbSize}px;\n    width: ${({ theme: { isWide, showValue }}: RangeThemePropsI) => thumbSize * (isWide && showValue ? 2 : 1)}px;\n    border-radius: ${thumbSize}px;\n    background: ${Colors.CSS.bg};\n    box-shadow: 0 0 0 3px ${Colors.CSS.blue} inset;\n    cursor: move;\n    border: 0px solid #000000;\n    -webkit-appearance: none;\n    transition: box-shadow .2s ease, width .3s ${Easings.quadratic};\n    position: relative;\n    top: -${thumbSize/2 - 2}px;\n  }\n  \n  &[type=range]:focus::-webkit-slider-runnable-track {\n    background: ${Colors.CSS.gray40};\n  }\n  /*#endregion */\n\n  /* region Firefox styles */\n  &[type=range]::-moz-range-track {\n    width: 100%;\n    height: 4px;\n    cursor: pointer;\n    background: ${Colors.CSS.gray20};\n    border-radius: 2px;\n  }\n\n  &[type=range]::-moz-range-thumb {\n    border: none;\n    height: ${thumbSize}px;\n    width: ${({ theme: { isWide, showValue }}: RangeThemePropsI) => thumbSize * (isWide && showValue ? 2 : 1)}px;\n    border-radius: ${thumbSize}px;\n    background: ${Colors.CSS.bg};\n    box-shadow: 0 0 0 3px ${Colors.CSS.blue} inset;\n    cursor: move;\n    transition: box-shadow .2s ease, width .3s ${Easings.quadratic};\n  }\n  /* #endregion */\n\n  &:focus,\n  &:hover {\n    &[type=range]::-moz-range-thumb {\n      box-shadow: 0 0 0 ${({ theme }) => theme.showValue ? thumbSize : 9}px ${Colors.CSS.blue} inset;\n    }\n\n    &[type=range]::-webkit-slider-thumb {\n      box-shadow: 0 0 0 ${({ theme }) => theme.showValue ? thumbSize : 9}px ${Colors.CSS.blue} inset;\n    }\n  }\n`\n\nconst getValueOffset = ({ theme: { isWide, showValue, thumbOffset} }: RangeThemePropsI) => {\n  return css`\n    left: calc((100% - ${thumbSize * (isWide && showValue ? 2 : 1)}px) * ${thumbOffset} + 2px);\n  `\n}\n\nexport const ValueNumber$ = styled.span`\n  font-size: 10px;\n  line-height: ${thumbSize}px;\n  text-align: center;\n  font-weight: 500;\n  color: ${Colors.CSS.blue};\n  width: ${({ theme: { isWide, showValue } }) => thumbSize * (isWide && showValue ? 2 : 1)}px;\n  height: ${thumbSize}px;\n  position: absolute;\n  bottom: 2px;\n  pointer-events: none;\n  ${getValueOffset};\n`\n\nexport const Limits$ = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: -10px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 10px;\n  color: ${Colors.CSS.gray60};\n  pointer-events: none;\n  line-height: 1;\n`","import React, { useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { InputElement$, RangeWrapper$, Label$, ValueNumber$, Limits$ } from './styles'\n\nexport interface RangePropsI {\n  values: [number, number, number]\n  initialValue?: number\n  handleChange: (value: number) => void\n  label?: string\n  showValue?: boolean\n  showLimits?: boolean\n}\n\nconst RangeInput: React.FunctionComponent<RangePropsI & React.HTMLAttributes<HTMLInputElement>> = ({\n  label, handleChange, showValue, showLimits, initialValue, values\n}) => {\n  const [value, setValue] = useState(initialValue || values[0])\n\n  const _handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const value = Number(e.currentTarget.value)\n    setValue(value)\n    handleChange(value)\n  }\n\n  const rangeDiff = values[1]-values[0]\n  const startValue = value - values[0]\n  const thumbOffset = startValue*100/rangeDiff/100\n\n  const theme = {\n    showLimits,\n    showValue,\n    withLabel: !!label,\n    thumbOffset: thumbOffset.toFixed(2),\n    isWide: value >= 1000,\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <RangeWrapper$>\n        {label && <Label$>{label}</Label$>}\n\n        {showLimits && (\n          <Limits$>\n            <div>{values[0]}</div>  \n            <div>{values[1]}</div>  \n          </Limits$>\n        )}\n        \n        <InputElement$\n          value={value}\n          onChange={_handleChange}\n          type='range'\n          min={values[0]}\n          max={values[1]}\n          step={values[2]}\n        />\n\n        {showValue && <ValueNumber$>{value}</ValueNumber$>}\n      </RangeWrapper$>\n    </ThemeProvider>\n  )\n}\n\nexport default RangeInput\n","import styled from 'styled-components'\nimport { Colors, Easings } from 'constants/Styles'\n\nexport const ToggleWrapper$ = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const Toggle$ = styled.button`\n  position: relative;\n  width: ${({ theme }) => theme.withText ? 62 : 48}px;\n  height: 24px;\n  padding: 4px;\n  border: none;\n  border-radius: 14px;\n  background: ${Colors.CSS.gray10};\n  cursor: pointer;\n`\n\nexport const Pin$ = styled.div`\n  position: absolute;\n  top: 3px;\n  left: 3px;\n  width: ${({ theme }) => theme.withText ? 32 : 18}px;\n  height: 18px;\n  border-radius: 9px;\n  transform: translateX(${({ theme }) => theme.isActive ? 24 : 0}px);\n  background: ${({ theme }) => theme.isActive ? Colors.CSS.bg : Colors.CSS.gray60};\n  transition: all .15s ${Easings.quadratic};\n  text-transform: uppercase;\n  line-height: 18px;\n  font-size: 10px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.isActive ? Colors.CSS.blue : Colors.CSS.bg};\n  box-shadow: 0 0 0 ${({ theme }) => theme.isActive ? 2 : 0}px ${Colors.CSS.blue} inset;\n`\n\nexport const Label$ = styled.span`\n  font-size: 12px;\n  color: ${Colors.CSS.text};\n  margin-right: 8px;\n`\n\nexport const Icon$ = styled.div`\n  width: 12px;\n  height: 12px;\n  position: absolute;\n  top: 2px;\n  left: 3px;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`","import React, { useState } from 'react'\nimport { ToggleWrapper$, Toggle$, Pin$, Icon$, Label$ } from './styles'\nimport { ThemeProvider } from 'styled-components'\n\ninterface TogglePropsI {\n  label?: string\n  defaultValue?: boolean\n  icon?: Element\n  withText?: boolean\n  onChange: (state: boolean) => void\n}\n\nconst Toggle: React.FunctionComponent<TogglePropsI> = ({\n  onChange,\n  withText,\n  defaultValue,\n  label,\n  children\n}) => {\n  const [isActive, setState] = useState(defaultValue)\n\n  const handleClick = () => {\n    setState(!isActive)\n    onChange(!isActive)\n  }\n\n  return (\n    <ThemeProvider theme={{ isActive, withText }}>\n      <ToggleWrapper$>\n        { label && <Label$>{label}</Label$>}\n\n        <Toggle$ onClick={handleClick}>\n          <Pin$>\n            {withText && (\n              <span>{isActive ? 'On' : 'Off'}</span>\n            )}\n\n            <Icon$>{children}</Icon$>\n          </Pin$>\n        </Toggle$>\n      </ToggleWrapper$>\n    </ThemeProvider>\n  )\n}\n\nexport default Toggle\n","import styled from 'styled-components'\nimport { Colors } from 'constants/Styles'\nimport Media from 'utils/Media'\n\nexport const Layout$ = styled.div`\n  width: 280px;\n  background: ${Colors.CSS.bg};\n  border: 1px solid ${Colors.CSS.gray20};\n\n  ${Media.Phone`\n    width: 100%;\n  `}\n`\n\nexport const SettingsHeader$ = styled.button`\n  width: 100%;\n  border: none;\n  background: ${Colors.CSS.gray10};\n  color: ${Colors.CSS.text};\n  padding: 8px 12px;\n  font-size: 10px;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1.5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nexport const SettingsControls$ = styled.div`\n  display: ${({ theme }) => theme.showControls ? 'block' : 'none'};\n  overflow: auto;\n  max-height: 420px;\n  padding: 12px;\n\n\n  ${Media.Phone`\n    max-height: 250px;\n  `}\n`\n\nexport const SettingsItem$ = styled.div`\n  margin-bottom: 16px;\n`","import React from 'react'\nimport RangeInput from 'components/RangeInput'\nimport Toggle from 'components/Toggle'\nimport { SettingsItem$ } from './styles'\n\nconst Controls = {\n  range: (keyName: string, item: ISettingsItem, updateValue: TSettingsItemUpdate): React.ReactNode => {\n    const { min, max, step } = item.props\n  \n    return (\n      <SettingsItem$ key={keyName}>\n        <RangeInput\n          initialValue={Number(item.value)}\n          label={item.title}\n          values={[min, max, step]}\n          handleChange={value => updateValue(keyName, value)}\n          showValue\n        />\n      </SettingsItem$>\n    )\n  },\n\n  toggle: (keyName: string, item: ISettingsItem, updateValue: TSettingsItemUpdate): React.ReactNode => {\n    return (\n      <SettingsItem$ key={keyName}>\n        <Toggle\n          onChange={value => updateValue(keyName, value)}\n          label={item.title}\n          defaultValue={Boolean(item.value)}\n        />\n      </SettingsItem$>\n    )\n  }\n}\n\nexport default Controls","import React, { useState, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport settingsTransformer from 'utils/settingsTransformer'\nimport Controls from './controls'\nimport {\n  Layout$,\n  SettingsControls$,\n  SettingsHeader$\n} from './styles'\n\ninterface SettingsPanelPropsI {\n  settings: ISettingsList\n  showControls?: boolean\n  onChange: (state: object) => void\n}\n\nconst SettingsPanel: React.FunctionComponent<SettingsPanelPropsI> = (props) => {\n  const [showControls, setShowControls] = useState(props.showControls)\n  const [settings, setSettings] = useState(props.settings)\n\n  const updateSettingsItemValue = (key: string, value: TSettingsValues) => {\n    const updatedItem = {\n      ...settings[key],\n      value\n    }\n\n    setSettings({ ...settings, [key]: updatedItem })\n  }\n\n  useEffect(() => {\n    props.onChange(settingsTransformer.toObject(settings))\n  }, [settings])\n\n  return (\n    <ThemeProvider theme={{ showControls }}>\n      <Layout$>\n        <SettingsHeader$ onClick={() => setShowControls(!showControls)}>\n          <span>Settings</span>\n          <span>{showControls ? '–' : '+'}</span>\n        </SettingsHeader$>\n\n        <SettingsControls$>\n          {Object.keys(settings).map(key => {\n            const item = settings[key]\n\n            return Controls[item.type](key, item, updateSettingsItemValue) || null\n          })}    \n        </SettingsControls$>\n      </Layout$>\n    </ThemeProvider>\n  )\n}\n\nexport default SettingsPanel"],"sourceRoot":""}