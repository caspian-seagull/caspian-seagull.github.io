{"version":3,"sources":["webpack:///./src/constants/ColorSchemes.ts","webpack:///./src/utils/geometry/oscillate.ts","webpack:///./src/sketches/vertices-oscillate.ts","webpack:///./src/pages/vertices-oscillate.tsx","webpack:///./src/utils/geometry/polypoints.ts"],"names":["Ren","main","accent","secondary","Rey","getSine","dt","freq","amp","fromZero","phase","Math","sin","oscillate","params","whole","parseInt","toFixed","defaultParams","scheme","size","figures","vertices","dots","show","radius","lines","sketch","p","Scheme","color","vrtcs","setup","createCanvas","noStroke","draw","background","millis","polypoints","v","c","x","width","y","height","r","a","PI","radians","map","pnt","i","fill","circle","SketchFrame$","React","memo","useState","settings","setSettings","useEffect","window","innerWidth","e","console","error","SketchGallery","title","layoutTheme","ThemeNames","light","P5Sketch","styled","div","points","angle","cos","push"],"mappings":"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","file":"component---src-pages-vertices-oscillate-tsx-99d31c20e5fd857b9393.js","sourcesContent":["export type ColorSchemeT = {\n  main: string\n  accent: string\n  secondary: string\n}\n\nexport const Ren: ColorSchemeT = {\n  main: '#111',\n  accent: '#FF005C',\n  secondary: '#FAFAFA'\n}\n\nexport const Rey: ColorSchemeT = {\n  main: '#EAE8E5',\n  accent: '#5189B8',\n  secondary: '#FFC164'\n}\n\nexport default { Ren, Rey }","interface oscillateParams {\n  freq?: number\n  amp?: number\n  dt: number\n  fromZero?: boolean\n  whole?: boolean\n  phase?: number\n}\n\nconst getSine = ({\n  dt = 0,\n  freq = 1,\n  amp = 1,\n  fromZero = false,\n  phase = 0\n}: oscillateParams): number => {\n  return amp * Math.sin(dt * (freq/60) + phase) + (fromZero ? amp : 0)\n}\n\nconst oscillate = (params: oscillateParams): number => {\n  return params.whole\n      ? parseInt(getSine(params).toFixed(0))\n      : parseInt(getSine(params).toFixed(2))\n}\n\nexport default oscillate","import p5 from \"p5\"\nimport { ColorSchemeT, Ren, Rey } from 'constants/ColorSchemes'\nimport polypoints from 'utils/geometry/polypoints'\nimport oscillate from \"utils/geometry/oscillate\"\n\ninterface FigureI {\n  vertices: number,\n  color?: p5.Color\n  lines?: {\n    show?: boolean,\n    width?: number\n  },\n  dots?: {\n    show?: boolean,\n    radius?: number\n  }\n}\n\nexport interface sketchParamsI {\n  size?: number\n  scheme: ColorSchemeT,\n  figures: FigureI[]\n}\n\nexport const defaultParams: sketchParamsI = {\n  scheme: Rey,\n  size: 512,\n  figures: [\n    {\n      vertices: 6,\n      dots: {\n        show: true,\n        radius: 2\n      },\n      lines: {\n        show: false\n      }\n    }\n  ]\n}\n\nconst sketch = ({ scheme, size, figures }: sketchParamsI = defaultParams) => (p: p5) => {\n\n  const Scheme = {\n    main: p.color(scheme.main),\n    accent: p.color(scheme.accent),\n    secondary: p.color(scheme.secondary),\n  }\n\n  let vrtcs = 0\n\n  p.setup = () => {\n    p.createCanvas(size, size)\n    p.color(Scheme.accent)\n    p.noStroke()\n  }\n\n  p.draw = () => {\n    p.background(Scheme.main)\n\n    vrtcs = oscillate({\n      amp: 2500,\n      freq: 0.1,\n      dt: p.millis(),\n      fromZero: true\n    })\n\n    polypoints({\n      v: vrtcs/1000+1,\n      c: {x: p.width/2, y: p.height/2},\n      r: 10 + oscillate({\n        amp: 50,\n        freq: 0.1,\n        dt: p.millis(),\n        fromZero: true\n      }),\n      a: p.PI+p.radians(p.millis()/10)\n    }).map((pnt, i) => {\n      p.fill(Scheme.accent)\n      p.circle(pnt.x, pnt.y, 10 + oscillate({\n        amp: 10,\n        freq: 0.1,\n        dt: p.millis(),\n        fromZero: true,\n      }))\n    })\n\n    polypoints({\n      v: vrtcs*2/1000+1,\n      c: {x: p.width/2, y: p.height/2},\n      r: 10 + oscillate({\n        amp: 50,\n        freq: 0.1,\n        dt: p.millis(),\n        fromZero: true,\n        phase: 1.5,\n      }),\n      a: p.PI/2+p.radians(p.millis()/10)\n    }).map((pnt, i) => {\n      p.fill(Scheme.secondary)\n      p.circle(pnt.x, pnt.y, 10 + oscillate({\n        amp: 5,\n        freq: 0.1,\n        dt: p.millis(),\n        phase: p.PI/2\n      }))\n    })\n  }\n}\n\nexport default sketch","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ThemeNames } from 'constants/Themes'\nimport { SketchGallery } from 'layouts/SketchGallery'\nimport P5Sketch from 'components/P5Sketch'\nimport Pagination from 'components/Pagination'\nimport sketch, { defaultParams } from 'sketches/vertices-oscillate'\n\nconst SineSeries1: FunctionComponent = () => {\n  const [settings, setSettings] = useState(defaultParams)\n\n  useEffect(() => {\n    try {\n      setSettings({\n        ...settings,\n        size: window.innerWidth < 512 ? window.innerWidth : 512\n      })\n    } catch(e) {\n      console.error(e)\n    }\n  }, [])\n\n  return (\n    <SketchGallery title='Vertices' layoutTheme={ThemeNames.light}>\n      {/* <Pagination items={sketchItems} activeIndex={sketchIndex} /> */}\n\n      <SketchFrame$>\n        <P5Sketch sketch={sketch(defaultParams)} />\n      </SketchFrame$>\n    </SketchGallery>\n  )\n}\n\nexport default React.memo(SineSeries1)\n\n//#region Styled\nconst SketchFrame$ = styled.div`\n  position: relative;\n  line-height: 0;\n  border-radius: 6px;\n  overflow: hidden;\n`\n//#endregion\n","interface PolypointsProps {\n  v: number, // vertices\n  c: Point, // center\n  r: number, // radius\n  a: number // start angle\n}\n\nconst polypoints = ({v, c, r, a}: PolypointsProps): Point[] => {\n  const points: Point[] = []\n\n  for (let i = 0; i < v; i++) {\n    let angle = a + (Math.PI*2/v) * i\n\n    let x = c.x + Math.sin(angle) * r\n    let y = c.y + Math.cos(angle) * r\n\n    points.push({x, y})\n  }\n\n  return points\n}\n\nexport default polypoints"],"sourceRoot":""}