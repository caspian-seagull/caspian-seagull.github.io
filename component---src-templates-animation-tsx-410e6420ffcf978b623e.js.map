{"version":3,"sources":["webpack:///./src/components/LocaleSwitcher/index.tsx","webpack:///./src/components/PageTitle/styles.tsx","webpack:///./src/components/PageTitle/index.tsx","webpack:///./src/layouts/Common/index.tsx","webpack:///./src/templates/animation.tsx","webpack:///./src/constants/Styles.ts","webpack:///./src/components/LocaleSwitcher/styles.tsx","webpack:///./src/constants/Locales.ts","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["LocaleSwitcher","locale","Locales","ru","to","PageTitle$","styled","div","SansSerif","Colors","CSS","text","Photo$","bg","Media","Phone","Info$","Title$","h1","Subtitle$","h2","PageTitle","imageSrc","imageSrcSet","title","subtitle","hasPhoto","srcSet","src","alt","CommonLayout","props","Body$","GlobalStyles$","children","createGlobalStyle","CSSColorSchemes","link","UnderlineText","color","blue20","position","blue60","AnimationTemplate","data","page","tags","preview","console","log","resolutions","PageData","css","Black","opaque","White","Blue","Gray100","gray10","gray20","gray40","gray60","gray80","blue","blue40","blue80","LocaleSwitcher$","LocalesT","en","createHTML","url","this"],"mappings":"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","file":"component---src-templates-animation-tsx-410e6420ffcf978b623e.js","sourcesContent":["import React from 'react'\nimport Locales, { LocalesT } from 'constants/Locales'\nimport { Link } from 'gatsby'\nimport { LocaleSwitcher$ } from './styles'\n\nconst LocaleSwitcher = ({ locale }: { locale: LocalesT }) => {\n  return (\n    <LocaleSwitcher$>\n      {locale === Locales.ru ? (\n        <Link to='/en/'>\n          In english\n        </Link>\n      ) : (\n        <Link to='/ru/'>\n          На русском\n        </Link>\n      )}\n    </LocaleSwitcher$>\n  )\n}\n\nexport default LocaleSwitcher","import styled from 'styled-components'\nimport { SansSerif, Colors } from 'constants/Styles'\nimport Media from 'utils/Media'\n\nexport const PageTitle$ = styled.div`\n  ${SansSerif}\n  display: flex;\n  flex-direction: row;\n  color: ${Colors.CSS.text};\n`\n\nexport const Photo$ = styled.div`\n  flex-shrink: 0;\n  position: relative;\n  width: 64px;\n  height: 64px;\n  border-radius: 6px;\n  overflow: hidden;\n  background: ${Colors.CSS.bg};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  img {\n    display: block;\n    height: 100%;\n  }\n\n  ${Media.Phone`\n    width: 48px;\n    height: 48px;\n  `}\n`\n\nexport const Info$ = styled.div`\n  margin-left: 16px;\n  margin-top: 0;\n\n  ${Media.Phone`\n    margin-left: 8px;\n  `}\n`\n\nexport const Title$ = styled.h1`\n  line-height: 1;\n  font-size: 32px;\n  font-weight: 800;\n  margin-bottom: 8px;\n  margin-top: 12px;\n\n  ${Media.Phone`\n    margin-top: 6px;\n    font-size: 24px;\n  `}\n`\n\nexport const Subtitle$ = styled.h2`\n  font-size: 10px;\n  line-height: 1;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  font-weight: 600;\n`","import React from 'react'\nimport { LocalesT } from 'constants/Locales'\nimport LocaleSwitcher from 'components/LocaleSwitcher'\nimport { PageTitle$, Photo$, Info$, Title$,  Subtitle$ } from './styles'\n\ninterface PageTitlePropI {\n  imageSrc?: string,\n  imageSrcSet?: string,\n  title: string,\n  subtitle: string,\n  locale: LocalesT\n}\n\nconst PageTitle: React.FunctionComponent<PageTitlePropI> = ({\n  imageSrc, imageSrcSet, title, subtitle, locale\n}) => {\n  const hasPhoto = imageSrc || imageSrcSet\n  return (\n    <PageTitle$>\n      {hasPhoto && (\n        <Photo$>\n          <img srcSet={imageSrcSet} src={imageSrc} alt={title} />\n        </Photo$>\n      )}\n  \n      <Info$>\n        <LocaleSwitcher locale={locale} />\n        <Title$>{ title }</Title$>\n        <Subtitle$>{ subtitle }</Subtitle$>\n      </Info$>\n    </PageTitle$>\n  )\n}\n\nexport default PageTitle","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { SansSerif, UnderlineText, CSSColorSchemes, Colors } from 'constants/Styles';\nimport Media from 'utils/Media'\n\nconst CommonLayout: React.FunctionComponent = (props) => {\n  return (\n    <Body$>\n      <GlobalStyles$ />\n      {props.children}\n    </Body$>\n  )\n};\n\nexport default CommonLayout\n\nconst Body$ = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background: ${Colors.CSS.bg};\n  padding: 32px;\n\n  ${Media.Phone`\n    padding: 24px 20px;\n  `}\n`;\n\nconst GlobalStyles$ = createGlobalStyle`\n  body, html {\n    ${SansSerif}\n    ${CSSColorSchemes}\n    margin: 0;\n    width: 100vw;\n    min-height: 100vh;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n\n  p {\n    font-size: 16px;\n    line-height: 1.5;\n    color: ${Colors.CSS.text};\n    margin: 10px 0;\n\n    &:first-child {\n      margin-top: 0;\n    }\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    ${Media.Phone`\n      font-size: 14px;\n    `}\n  }\n\n  a {\n    color: ${Colors.CSS.link};\n    text-decoration: none;\n    font-weight: 500;\n    ${UnderlineText({ color: Colors.CSS.blue20, position: 1.2 })}\n    \n    &:hover {\n      ${UnderlineText({ color: Colors.CSS.blue60, position: 1.2 })}\n    }\n  }\n`;\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport CommonLayout from 'layouts/Common'\nimport PageTitle from 'components/PageTitle'\n\ninterface AnimationTemplatePropsI {\n  data: ContentfulAnimationPageI\n}\n\nconst AnimationTemplate: React.FunctionComponent<AnimationTemplatePropsI> = (props) => {\n  const { title, tags, preview } = props.data.page\n\n  console.log(props)\n\n  return (\n    <CommonLayout>\n      <PageTitle imageSrc={preview.resolutions.src} title={title} subtitle={tags} />\n    </CommonLayout>\n  )\n}\n\nexport default AnimationTemplate\n\nexport const PageData = graphql`\n  query AnimationPage($slug: String!, $node_locale: String!) {\n    page: contentfulAnimationPage(slug: {eq: $slug}, node_locale: {eq: $node_locale}) {\n      description {\n        content {\n          content {\n            value\n          }\n        }\n      }\n      slug\n      tags\n      title\n      updatedAt(fromNow: true, locale: $node_locale)\n      preview {\n        resolutions {\n          src\n        }\n      }\n    }\n  }  \n`","import { css } from 'styled-components'\n\nexport const SansSerif = css`\n  font-family: 'Montserrat', sans-serif;\n`\n\nexport const Colors = {\n  Black: (opaque: number = 100) => `rgba(0, 0, 0, ${opaque * 0.01})`,\n  White: (opaque: number = 100) => `rgba(255, 255, 255, ${opaque * 0.01})`,\n  Blue:  (opaque: number = 100) => `rgba(0, 166, 200, ${opaque * 0.01})`,\n  \n  Gray100: '#FAFAFA',\n\n  CSS: {\n    gray10: 'var(--colors-gray10)',\n    gray20: 'var(--colors-gray20)',\n    gray40: 'var(--colors-gray40)',\n    gray60: 'var(--colors-gray60)',\n    gray80: 'var(--colors-gray80)',\n\n    blue:   'var(--colors-blue)',\n    blue20: 'var(--colors-blue20)',\n    blue40: 'var(--colors-blue40)',\n    blue60: 'var(--colors-blue60)',\n    blue80: 'var(--colors-blue80)',\n\n    bg:     'var(--colors-bg)',\n    text:   'var(--colors-text)',\n    link:   'var(--colors-link)'\n  }\n}\n\nexport const darkMedia = 'prefers-color-scheme: dark'\n\nexport const CSSColorSchemes = css`\n  --colors-bg:   ${Colors.Gray100};\n  --colors-text: ${Colors.Black(90)};\n  --colors-link: ${Colors.Blue()};\n\n  --colors-blue: ${Colors.Blue()};\n  --colors-blue20: ${Colors.Blue(20)};\n  --colors-blue40: ${Colors.Blue(40)};\n  --colors-blue60: ${Colors.Blue(60)};\n  --colors-blue80: ${Colors.Blue(80)};\n\n  --colors-gray10: ${Colors.Black(10)};\n  --colors-gray20: ${Colors.Black(20)};\n  --colors-gray40: ${Colors.Black(40)};\n  --colors-gray60: ${Colors.Black(60)};\n  --colors-gray80: ${Colors.Black(80)};\n\n  @media (${darkMedia}) {\n    --colors-bg:   ${Colors.Black(90)};\n    --colors-text: ${Colors.White(90)};\n\n    --colors-gray10: ${Colors.White(10)};\n    --colors-gray20: ${Colors.White(20)};\n    --colors-gray40: ${Colors.White(40)};\n    --colors-gray60: ${Colors.White(60)};\n    --colors-gray80: ${Colors.White(80)};\n  }\n`\n\nexport const UnderlineText = ({\n  color = 'currentColor',\n  position = 1.05\n} : {\n  color: string,\n  position: number\n}) => css`\n  background-image: linear-gradient(to right, ${color} 100%, ${color} 0%);\n  background-position: 0 ${position}em;\n  background-repeat: repeat-x;\n  background-size: 1px 0.5px;\n`","import styled from 'styled-components'\n\nexport const LocaleSwitcher$ = styled.div`\n  font-size: 12px;\n  line-height: 1.5;\n`","export default {\n  ru: `ru`,\n  en: `en-US`\n}\n\nexport enum LocalesT {\n  ru = 'ru',\n  en = 'en-US'\n} ","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}