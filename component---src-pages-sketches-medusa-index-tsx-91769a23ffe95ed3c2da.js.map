{"version":3,"sources":["webpack:///./src/geometry/polypoints.ts","webpack:///./src/geometry/PointClass.ts","webpack:///./src/sketches/medusa/sketchSettings.ts","webpack:///./src/sketches/medusa/index.ts","webpack:///./src/pages/sketches/medusa/index.tsx","webpack:///./src/components/RangeInput/styles.ts","webpack:///./src/components/RangeInput/index.tsx","webpack:///./src/components/Toggle/styles.tsx","webpack:///./src/components/Toggle/index.tsx","webpack:///./src/components/SettingsPanel/styles.tsx","webpack:///./src/components/SettingsPanel/controls.tsx","webpack:///./src/components/SettingsPanel/index.tsx"],"names":["polypoints","v","c","r","a","PointClass","Math","PI","points","i","push","x","sin","y","cos","this","Number","toFixed","sketchSettings","polygonsNumber","type","value","props","min","max","step","title","thickness","phaseOffset","amplitude","gap","vertices","frequency","speed","showLines","showPolygons","defaultSettings","settingsTransformer","toObject","sketch","settings","p","dt","fps","Center","windowWidth","windowHeight","setup","createCanvas","noStroke","draw","mainColor","frameRate","clear","background","Colors","Black","stroke","strokeWeight","noFill","fill","currentPoints","radians","beginShape","map","vertex","endShape","CLOSE","prevPoints","line","forEach","circle","textSize","text","SketchFrame$","React","memo","useState","setSettings","className","FullscreenDemo","top","left","PageTitle","to","right","SettingsPanel","onChange","P5Sketch","styled","div","CSS","bg","RangeWrapper$","theme","showLimits","Easings","quadratic","withLabel","Label$","gray80","InputElement$","input","gray20","isWide","showValue","blue","thumbSize","gray40","getValueOffset","thumbOffset","css","ValueNumber$","span","Limits$","gray60","RangeInput","label","handleChange","initialValue","values","setValue","rangeDiff","e","currentTarget","ToggleWrapper$","Toggle$","button","withText","gray10","Pin$","isActive","Icon$","Toggle","defaultValue","children","setState","onClick","Layout$","Media","Phone","SettingsHeader$","SettingsControls$","showControls","SettingsItem$","Controls","range","keyName","item","updateValue","key","toggle","Boolean","setShowControls","updateSettingsItemValue","updatedItem","useEffect","Object","keys"],"mappings":"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","file":"component---src-pages-sketches-medusa-index-tsx-91769a23ffe95ed3c2da.js","sourcesContent":["import PointClass from 'geometry/PointClass'\n\n/**\n * Polypoints returns array of points of polygon\n * \n * @param v — number of vertices\n * @param c — polygon center point\n * @param r — polygon radius\n * @param a — start angle in radians\n */\n\nexport default function polypoints(\n  v: number = 3,\n  c: Point  = new PointClass(0, 0),\n  r: number = 100,\n  a: number = Math.PI/2\n): Point[] {\n  const points: Point[] = []\n\n  for (let i = 0; i < v; i++) {\n    points.push({\n      x: c.x + Math.sin(a + (Math.PI*2/v) * i) * r, \n      y: c.y + Math.cos(a + (Math.PI*2/v) * i) * r\n    })\n  }\n\n  return points\n}","export default class PointClass {\n  x: number\n  y: number\n  \n  constructor(x: number, y: number) {\n    this.x = Number(x.toFixed(0))\n    this.y = Number(y.toFixed(0))\n  }\n}","const sketchSettings: ISettingsList = {\n  polygonsNumber: {\n    type: 'range',\n    value: 100,\n    props: {\n      min: 1,\n      max: 100,\n      step: 1\n    },\n    title: 'Length'\n  },\n\n  thickness: {\n    type: 'range',\n    value: 2,\n    props: {\n      min: 1,\n      max: 4,\n      step: 1\n    },\n    title: 'Thickness'\n  },\n\n  phaseOffset: {\n    type: 'range',\n    value: 10,\n    props: {\n      min: 0,\n      max: 50,\n      step: 1\n    },\n    title: 'Phase offset'\n  },\n\n  amplitude: {\n    type: 'range',\n    value: 0,\n    props: {\n      min: 0,\n      max: 180,\n      step: 1\n    },\n    title: 'Amplitude'\n  },\n\n  gap: {\n    type: 'range',\n    value: 3,\n    props: {\n      min: 1,\n      max: 10,\n      step: 1\n    },\n    title: 'Gap'\n  },\n\n  vertices: {\n    type: 'range',\n    value: 8,\n    props: {\n      min: 1, \n      max: 20,\n      step: 1\n    },\n    title: 'Vertices'\n  },\n\n  frequency: {\n    type: 'range',\n    value: 15.5,\n    props: {\n      min: 0, \n      max: 60,\n      step: 0.5\n    },\n    title: 'Frequency'\n  },\n\n  speed: {\n    type: 'range',\n    value: 1.7,\n    props: {\n      min: 0, \n      max: 2,\n      step: 0.1\n    },\n    title: 'Speed'\n  },\n\n  showLines: {\n    type: 'toggle',\n    value: false,\n    props: {},\n    title: 'Show lines'\n  },\n\n  showPolygons: {\n    type: 'toggle',\n    value: false,\n    props: {},\n    title: 'Show polygons'\n  }\n}\n\nexport default sketchSettings","import p5 from \"p5\"\nimport polypoints from 'geometry/polypoints'\nimport { Colors } from \"constants/Styles\"\nimport settingsTransformer from 'utils/settingsTransformer'\nimport sketchSettings from './sketchSettings'\n\nexport interface ISketchSettings {\n  vertices?: number,\n  thickness?: number,\n  polygonsNumber?: number, \n  gap?: number,\n  phaseOffset?: number,\n  speed?: number,\n  amplitude?: number,\n  frequency?: number,\n  showLines?: boolean,\n  showPolygons?: boolean\n}\n\nexport const defaultSettings = settingsTransformer.toObject<ISketchSettings>(sketchSettings)\n\nconst sketch = (settings: ISketchSettings) => (p: p5) => {\n  let dt = 0\n  let fps: number = 0\n\n  const Center = {\n    x: p.windowWidth / 2,\n    y: p.windowHeight / 2\n  }\n\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight)\n    p.noStroke()\n  }\n  \n  p.draw = () => {\n    let mainColor = `rgba(255, 0, 92, ${dt < 100 ? dt/25 : '1'})`\n\n    if (dt % 5 === 0) {\n      fps = p.frameRate()\n    } \n\n    p.clear()\n    p.background(Colors.Black(90))\n\n    if (settings.showPolygons || settings.showLines) {\n      p.stroke(mainColor)\n      p.strokeWeight(settings.thickness/4)\n      p.noFill()\n    } else {\n      p.fill(mainColor)\n    }\n\n    for (let i = settings.polygonsNumber; i > 0; i--) {\n      let currentPoints = polypoints(\n        settings.vertices,\n        Center,\n        (i+1) * settings.gap + settings.phaseOffset * Math.sin(dt*settings.speed/50 + i * 0.2),\n        p.radians((settings.amplitude + settings.frequency) * Math.sin(dt*settings.speed/100 + i * 0.2 * settings.frequency))\n      )\n\n      if (settings.showPolygons) {\n        p.beginShape()\n        currentPoints.map(({x, y}) => p.vertex(x, y))\n        p.endShape(p.CLOSE)\n      }\n        \n      if (settings.showLines) {\n        let prevPoints = polypoints(\n          settings.vertices,\n          Center,\n          (i) * settings.gap + settings.phaseOffset * Math.sin(dt*settings.speed/50 + (i-1) * 0.2),\n          p.radians((settings.amplitude + settings.frequency) * Math.sin(dt*settings.speed/100 + (i-1) * 0.2 * settings.frequency))\n        )\n  \n        currentPoints.map(({ x, y }, i) => {\n          p.line(x, y, prevPoints[i].x, prevPoints[i].y)\n        })\n      }\n      \n      if (!settings.showLines && !settings.showPolygons) {\n        currentPoints.forEach(({x, y}) => p.circle(x, y, settings.thickness))\n      }\n    }\n    \n    p.textSize(14)\n    p.fill('rgba(255, 255, 255, 0.5)')\n    p.text(`FPS: ${fps && fps.toFixed(0)}`, 16, p.windowHeight - 16)\n\n    dt += 1\n  }\n}\n\nexport default sketch","import React, { useState, FunctionComponent } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport FullscreenDemo from 'layouts/FullscreenDemo'\nimport { Interface$, Corner$ } from 'layouts/FullscreenDemo/styles'\nimport { Colors } from 'constants/Styles'\nimport P5Sketch from 'components/P5Sketch'\nimport PageTitle from 'components/PageTitle'\nimport SettingsPanel from 'components/SettingsPanel'\nimport sketch, { defaultSettings } from 'sketches/medusa'\nimport sketchSettings from 'sketches/medusa/sketchSettings'\nimport SEO from 'components/seo'\n\nconst Medusa: FunctionComponent = () => {\n  const [settings, setSettings] = useState(defaultSettings)\n\n  return (\n    <div className=\"dark-theme\">\n      <SEO title=\"«Medusa» animation\" />\n\n      <FullscreenDemo>\n        <Interface$>\n          <Corner$ top left>\n            <PageTitle title='Medusa' />\n            <Link to=\"/\">Home</Link>\n          </Corner$>\n\n          <Corner$ top right> \n            <SettingsPanel onChange={setSettings} settings={sketchSettings} />\n          </Corner$>\n        </Interface$>\n\n        <SketchFrame$>\n          <P5Sketch sketch={sketch(settings)} />\n        </SketchFrame$>\n      </FullscreenDemo>\n    </div>\n  )\n}\n\nexport default React.memo(Medusa)\n\n//#region Styled\nconst SketchFrame$ = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  line-height: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  background-color: ${Colors.CSS.bg}\n`\n//#endregion","import styled, { css } from 'styled-components'\nimport { Colors, Easings } from 'constants/Styles'\n\nconst gapSize = 15\nconst thumbSize = 28\n\ninterface RangeThemePropsI {\n  theme: {\n    showValue: boolean,\n    isWide: boolean,\n    thumbOffset: number,\n    showLimits: boolean,\n    withLabel: boolean\n  }\n}\n\nexport const RangeWrapper$ = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  cursor: pointer;\n  margin-bottom: ${({ theme }) => theme.showLimits ? 14 : 0}px;\n\n  span {\n    color: ${Colors.CSS.text};\n    transition: color .2s ease, transform .2s ${Easings.quadratic};\n  }\n\n  &:focus-within:not(:hover) {\n    span {\n      color: ${Colors.CSS.bg};\n    }\n  }\n\n  &:hover {\n    span {\n      transform: ${({ theme }: RangeThemePropsI) => !theme.withLabel && `translateY(-${thumbSize - 2}px)` };\n    }\n  }\n`\n\nexport const Label$ = styled.div`\n  font-size: 12px;\n  line-height: 1.5;\n  font-weight: 500;\n  font-family: sans-serif;\n  color: ${Colors.CSS.gray80};\n`\n\nexport const InputElement$ = styled.input`\n  width: 100%;\n  height: ${thumbSize}px;\n  background: transparent;\n  -webkit-appearance: none;\n\n  &[type=range]:focus {\n    outline: none;\n  }\n\n  /* #region webkit styles */\n  &[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 4px;\n    cursor: pointer;\n    background: ${Colors.CSS.gray20};\n    border-radius: 2px;\n  }\n  \n  &[type=range]::-webkit-slider-thumb {\n    border: none;\n    height: ${thumbSize}px;\n    width: ${({ theme: { isWide, showValue }}: RangeThemePropsI) => thumbSize * (isWide && showValue ? 2 : 1)}px;\n    border-radius: ${thumbSize}px;\n    background: ${Colors.CSS.bg};\n    box-shadow: 0 0 0 3px ${Colors.CSS.blue} inset;\n    cursor: move;\n    border: 0px solid #000000;\n    -webkit-appearance: none;\n    transition: box-shadow .2s ease, width .3s ${Easings.quadratic};\n    position: relative;\n    top: -${thumbSize/2 - 2}px;\n  }\n  \n  &[type=range]:focus::-webkit-slider-runnable-track {\n    background: ${Colors.CSS.gray40};\n  }\n  /*#endregion */\n\n  /* region Firefox styles */\n  &[type=range]::-moz-range-track {\n    width: 100%;\n    height: 4px;\n    cursor: pointer;\n    background: ${Colors.CSS.gray20};\n    border-radius: 2px;\n  }\n\n  &[type=range]::-moz-range-thumb {\n    border: none;\n    height: ${thumbSize}px;\n    width: ${({ theme: { isWide, showValue }}: RangeThemePropsI) => thumbSize * (isWide && showValue ? 2 : 1)}px;\n    border-radius: ${thumbSize}px;\n    background: ${Colors.CSS.bg};\n    box-shadow: 0 0 0 3px ${Colors.CSS.blue} inset;\n    cursor: move;\n    transition: box-shadow .2s ease, width .3s ${Easings.quadratic};\n  }\n  /* #endregion */\n\n  &:focus,\n  &:hover {\n    &[type=range]::-moz-range-thumb {\n      box-shadow: 0 0 0 ${({ theme }) => theme.showValue ? thumbSize : 9}px ${Colors.CSS.blue} inset;\n    }\n\n    &[type=range]::-webkit-slider-thumb {\n      box-shadow: 0 0 0 ${({ theme }) => theme.showValue ? thumbSize : 9}px ${Colors.CSS.blue} inset;\n    }\n  }\n`\n\nconst getValueOffset = ({ theme: { isWide, showValue, thumbOffset} }: RangeThemePropsI) => {\n  return css`\n    left: calc((100% - ${thumbSize * (isWide && showValue ? 2 : 1)}px) * ${thumbOffset} + 2px);\n  `\n}\n\nexport const ValueNumber$ = styled.span`\n  font-size: 10px;\n  line-height: ${thumbSize}px;\n  text-align: center;\n  font-weight: 500;\n  color: ${Colors.CSS.blue};\n  width: ${({ theme: { isWide, showValue } }) => thumbSize * (isWide && showValue ? 2 : 1)}px;\n  height: ${thumbSize}px;\n  position: absolute;\n  bottom: 2px;\n  pointer-events: none;\n  ${getValueOffset};\n`\n\nexport const Limits$ = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: -10px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 10px;\n  color: ${Colors.CSS.gray60};\n  pointer-events: none;\n  line-height: 1;\n`","import React, { useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { InputElement$, RangeWrapper$, Label$, ValueNumber$, Limits$ } from './styles'\n\nexport interface RangePropsI {\n  values: [number, number, number]\n  initialValue?: number\n  handleChange: (value: number) => void\n  label?: string\n  showValue?: boolean\n  showLimits?: boolean\n}\n\nconst RangeInput: React.FunctionComponent<RangePropsI & React.HTMLAttributes<HTMLInputElement>> = ({\n  label, handleChange, showValue, showLimits, initialValue, values\n}) => {\n  const [value, setValue] = useState(initialValue || values[0])\n\n  const _handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const value = Number(e.currentTarget.value)\n    setValue(value)\n    handleChange(value)\n  }\n\n  const rangeDiff = values[1]-values[0]\n  const startValue = value - values[0]\n  const thumbOffset = startValue*100/rangeDiff/100\n\n  const theme = {\n    showLimits,\n    showValue,\n    withLabel: !!label,\n    thumbOffset: thumbOffset.toFixed(2),\n    isWide: value >= 1000,\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <RangeWrapper$>\n        {label && <Label$>{label}</Label$>}\n\n        {showLimits && (\n          <Limits$>\n            <div>{values[0]}</div>  \n            <div>{values[1]}</div>  \n          </Limits$>\n        )}\n        \n        <InputElement$\n          value={value}\n          onChange={_handleChange}\n          type='range'\n          min={values[0]}\n          max={values[1]}\n          step={values[2]}\n        />\n\n        {showValue && <ValueNumber$>{value}</ValueNumber$>}\n      </RangeWrapper$>\n    </ThemeProvider>\n  )\n}\n\nexport default RangeInput\n","import styled from 'styled-components'\nimport { Colors, Easings } from 'constants/Styles'\n\nexport const ToggleWrapper$ = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const Toggle$ = styled.button`\n  position: relative;\n  width: ${({ theme }) => theme.withText ? 62 : 48}px;\n  height: 24px;\n  padding: 4px;\n  border: none;\n  border-radius: 14px;\n  background: ${Colors.CSS.gray10};\n  cursor: pointer;\n`\n\nexport const Pin$ = styled.div`\n  position: absolute;\n  top: 3px;\n  left: 3px;\n  width: ${({ theme }) => theme.withText ? 32 : 18}px;\n  height: 18px;\n  border-radius: 9px;\n  transform: translateX(${({ theme }) => theme.isActive ? 24 : 0}px);\n  background: ${({ theme }) => theme.isActive ? Colors.CSS.bg : Colors.CSS.gray60};\n  transition: all .15s ${Easings.quadratic};\n  text-transform: uppercase;\n  line-height: 18px;\n  font-size: 10px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.isActive ? Colors.CSS.blue : Colors.CSS.bg};\n  box-shadow: 0 0 0 ${({ theme }) => theme.isActive ? 2 : 0}px ${Colors.CSS.blue} inset;\n`\n\nexport const Label$ = styled.span`\n  font-size: 12px;\n  color: ${Colors.CSS.text};\n  margin-right: 8px;\n`\n\nexport const Icon$ = styled.div`\n  width: 12px;\n  height: 12px;\n  position: absolute;\n  top: 2px;\n  left: 3px;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`","import React, { useState } from 'react'\nimport { ToggleWrapper$, Toggle$, Pin$, Icon$, Label$ } from './styles'\nimport { ThemeProvider } from 'styled-components'\n\ninterface TogglePropsI {\n  label?: string\n  defaultValue?: boolean\n  icon?: Element\n  withText?: boolean\n  onChange: (state: boolean) => void\n}\n\nconst Toggle: React.FunctionComponent<TogglePropsI> = ({\n  onChange,\n  withText,\n  defaultValue,\n  label,\n  children\n}) => {\n  const [isActive, setState] = useState(defaultValue)\n\n  const handleClick = () => {\n    setState(!isActive)\n    onChange(!isActive)\n  }\n\n  return (\n    <ThemeProvider theme={{ isActive, withText }}>\n      <ToggleWrapper$>\n        { label && <Label$>{label}</Label$>}\n\n        <Toggle$ onClick={handleClick}>\n          <Pin$>\n            {withText && (\n              <span>{isActive ? 'On' : 'Off'}</span>\n            )}\n\n            <Icon$>{children}</Icon$>\n          </Pin$>\n        </Toggle$>\n      </ToggleWrapper$>\n    </ThemeProvider>\n  )\n}\n\nexport default Toggle\n","import styled from 'styled-components'\nimport { Colors } from 'constants/Styles'\nimport Media from 'utils/Media'\n\nexport const Layout$ = styled.div`\n  width: 280px;\n  background: ${Colors.CSS.bg};\n  border: 1px solid ${Colors.CSS.gray20};\n\n  ${Media.Phone`\n    width: 100%;\n  `}\n`\n\nexport const SettingsHeader$ = styled.button`\n  width: 100%;\n  border: none;\n  background: ${Colors.CSS.gray10};\n  color: ${Colors.CSS.text};\n  padding: 8px 12px;\n  font-size: 10px;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1.5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nexport const SettingsControls$ = styled.div`\n  display: ${({ theme }) => theme.showControls ? 'block' : 'none'};\n  overflow: auto;\n  max-height: 420px;\n  padding: 12px;\n\n\n  ${Media.Phone`\n    max-height: 250px;\n  `}\n`\n\nexport const SettingsItem$ = styled.div`\n  margin-bottom: 16px;\n`","import React from 'react'\nimport RangeInput from 'components/RangeInput'\nimport Toggle from 'components/Toggle'\nimport { SettingsItem$ } from './styles'\n\nconst Controls = {\n  range: (keyName: string, item: ISettingsItem, updateValue: TSettingsItemUpdate): React.ReactNode => {\n    const { min, max, step } = item.props\n  \n    return (\n      <SettingsItem$ key={keyName}>\n        <RangeInput\n          initialValue={Number(item.value)}\n          label={item.title}\n          values={[min, max, step]}\n          handleChange={value => updateValue(keyName, value)}\n          showValue\n        />\n      </SettingsItem$>\n    )\n  },\n\n  toggle: (keyName: string, item: ISettingsItem, updateValue: TSettingsItemUpdate): React.ReactNode => {\n    return (\n      <SettingsItem$ key={keyName}>\n        <Toggle\n          onChange={value => updateValue(keyName, value)}\n          label={item.title}\n          defaultValue={Boolean(item.value)}\n        />\n      </SettingsItem$>\n    )\n  }\n}\n\nexport default Controls","import React, { useState, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport settingsTransformer from 'utils/settingsTransformer'\nimport Controls from './controls'\nimport {\n  Layout$,\n  SettingsControls$,\n  SettingsHeader$\n} from './styles'\n\ninterface SettingsPanelPropsI {\n  settings: ISettingsList\n  showControls?: boolean\n  onChange: (state: object) => void\n}\n\nconst SettingsPanel: React.FunctionComponent<SettingsPanelPropsI> = (props) => {\n  const [showControls, setShowControls] = useState(props.showControls)\n  const [settings, setSettings] = useState(props.settings)\n\n  const updateSettingsItemValue = (key: string, value: TSettingsValues) => {\n    const updatedItem = {\n      ...settings[key],\n      value\n    }\n\n    setSettings({ ...settings, [key]: updatedItem })\n  }\n\n  useEffect(() => {\n    props.onChange(settingsTransformer.toObject(settings))\n  }, [settings])\n\n  return (\n    <ThemeProvider theme={{ showControls }}>\n      <Layout$>\n        <SettingsHeader$ onClick={() => setShowControls(!showControls)}>\n          <span>Settings</span>\n          <span>{showControls ? '–' : '+'}</span>\n        </SettingsHeader$>\n\n        <SettingsControls$>\n          {Object.keys(settings).map(key => {\n            const item = settings[key]\n\n            return Controls[item.type](key, item, updateSettingsItemValue) || null\n          })}    \n        </SettingsControls$>\n      </Layout$>\n    </ThemeProvider>\n  )\n}\n\nexport default SettingsPanel"],"sourceRoot":""}