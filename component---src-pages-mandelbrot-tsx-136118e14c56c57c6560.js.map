{"version":3,"sources":["webpack:///./src/layouts/SketchGallery/index.tsx","webpack:///./src/sketches/mandelbrot/index.ts","webpack:///./src/sketches/mandelbrot/mandelbrot1.ts","webpack:///./src/pages/mandelbrot.tsx","webpack:///./src/components/Pagination/index.tsx"],"names":["SketchGallery","children","title","layoutTheme","theme","PageThemes","Page$","GlobalStyles","Content$","Header$","createGlobalStyle","text","styled","main","background","div","Media","Phone","header","customSettings","p","adiv","setup","createCanvas","pixelDensity","loadPixels","x","width","y","height","brightness","a","map","b","ca","cb","n","bb","abs","pix","pixels","updatePixels","SketchFrame$","React","memo","useState","settings","setSettings","sketchIndex","setSketchIndex","paginationItems","sketches","sketch","i","onClick","ThemeNames","light","Pagination","showSingle","items","activeIndex","P5Sketch","type","value","step","onChange","e","Number","currentTarget","length","Pagination$","item","Button$","disabled","nav","button"],"mappings":"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","file":"component---src-pages-mandelbrot-tsx-136118e14c56c57c6560.js","sourcesContent":["import React from 'react'\nimport styled, { createGlobalStyle, ThemeProvider, StyledComponent } from 'styled-components'\nimport Title from 'components/Title'\nimport { PageThemes, ThemeNames, PageThemeI } from 'constants/Themes'\nimport Media from 'utils/Media'\nimport { Link } from 'gatsby'\n\ninterface LayoutProps {\n  title?: string\n  layoutTheme?: ThemeNames\n}\n\nexport const SketchGallery: React.StatelessComponent<LayoutProps> = ({ children, title, layoutTheme }) => {\n  return(\n    <ThemeProvider theme={PageThemes[layoutTheme]}>\n      <Page$>      \n        <GlobalStyles/>\n        \n        <Content$>\n          <Header$>\n            {title && <Title>{title}</Title>}\n          </Header$>\n\n          {children}\n        </Content$>  \n      </Page$>\n    </ThemeProvider>\n  )\n}\n\n//region Styled\nconst GlobalStyles = createGlobalStyle`\n  body {\n    margin: 0;\n    width: 100vw;\n    min-height: 100vh;\n    color: ${({ theme }: PageThemeI) => theme.text}\n  }\n`\n\nconst Page$ = styled.main`\n  width: 100vw;\n  min-height: 100vh;\n  background: ${({ theme }: PageThemeI ) => theme.background};\n  color: ${({ theme }: PageThemeI ) => theme.text };\n` \n\nconst Content$ = styled.div`\n  max-width: 640px;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${Media.Phone`\n    padding: 0 24px;\n  `}\n`\n\nconst Header$ = styled.header`\n  padding: 32px 0;\n  font-size: 32px;\n\n  ${Media.Phone`\n    padding: 20px 0;\n    font-size: 24px;\n  `}\n`\n//endregion","import MSetSketch1 from './mandelbrot1'\n\nexport default [\n  MSetSketch1\n]","import p5 from 'p5';\n\ninterface MandelbrotSettings {\n  adiv?: number\n}\n\nconst MandelbrotSet1 = (customSettings: MandelbrotSettings) => (p: p5) => {\n  const { adiv = 1 } = customSettings\n  const maxIterations = 200;\n  const limit = 2 \n\n  p.setup = () => {\n    p.createCanvas(600, 600);\n    p.pixelDensity(1);\n    p.loadPixels();\n    \n    \n    for (let x = 0; x < p.width; x++) {\n      for (let y = 0; y < p.height; y++) {\n        let brightness;\n\n        let a = p.map(x, 0, p.width, -0.5, 0.5);\n        let b = p.map(y, 0, p.height, -0.5, 0.5);\n\n        let ca = a;\n        let cb = b;\n\n        for (let n = 0; n < maxIterations; n = n + 10) {\n          let aa = a * a - b * b;\n          let bb = 2 * a * b;\n\n          a = (aa + ca)/adiv\n          b = (bb + cb)/(adiv * 0.2);\n\n          if (p.abs(a + b) > limit) break;\n\n          brightness = p.map(n, 0, maxIterations, 0, 255)\n\n          if (n === maxIterations) {\n            brightness = 0\n          }\n        }\n\n        let pix = (x + y * p.width) * 4;\n\n        p.pixels[pix + 0] = brightness;\n        p.pixels[pix + 1] = 0;\n        p.pixels[pix + 2] = brightness / 2;\n        p.pixels[pix + 3] = 255;\n      }\n    }\n\n    p.updatePixels();\n  };\n};\n\nexport default MandelbrotSet1;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ThemeNames } from 'constants/Themes';\nimport { SketchGallery } from 'layouts/SketchGallery';\nimport P5Sketch from 'components/P5Sketch';\nimport Pagination from 'components/Pagination';\nimport sketches from 'sketches/mandelbrot';\n\nconst SineSeries1: FunctionComponent = () => {\n  const [settings, setSettings] = useState({\n    adiv: 1,\n  });\n  const [sketchIndex, setSketchIndex] = useState(0);\n\n  const paginationItems = sketches.map((sketch, i) => ({\n    onClick: () => setSketchIndex(i),\n  }));\n\n  return (\n    <SketchGallery title='Mandelbrot set' layoutTheme={ThemeNames.light}>\n      <Pagination\n        showSingle={false}\n        items={paginationItems}\n        activeIndex={sketchIndex}\n      />\n\n      <SketchFrame$>\n        <P5Sketch sketch={sketches[sketchIndex](settings)} />\n      </SketchFrame$>\n\n      <input\n        type='number'\n        value={settings.adiv}\n        step='0.05'\n        onChange={(e) => setSettings({ adiv: Number(e.currentTarget.value) })}\n      />\n    </SketchGallery>\n  );\n};\n\nexport default React.memo(SineSeries1);\n\n//#region Styled\nconst SketchFrame$ = styled.div`\n  position: relative;\n  line-height: 0;\n  border-radius: 6px;\n`;\n//#endregion\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype PaginationItem = {\n  link?: string;\n  text?: string;\n  onClick: (e: React.SyntheticEvent) => void;\n};\n\ninterface PaginationI {\n  items: PaginationItem[];\n  activeIndex?: number;\n  showSingle?: boolean\n}\n\nconst Pagination = ({ items = [], activeIndex, showSingle = true }: PaginationI) => {\n\n  if (!showSingle && items.length === 1) return null\n\n  return(\n    <Pagination$>\n      {items.map((item, i) => (\n        <Button$ disabled={activeIndex === i} onClick={item.onClick}>\n          {item.text || i + 1}\n        </Button$>\n      ))}\n    </Pagination$>\n  )\n}\n\nexport default Pagination;\n\nconst Pagination$ = styled.nav`\n  display: flex;\n  align-items: center;\n`;\n\nconst Button$ = styled.button`\n  border: none;\n  background: #333;\n  height: 32px;\n  line-height: 32px;\n  color: #fff;\n  text-transform: uppercase;\n  letter-spacing: 1.5px;\n  padding: 0 16px;\n  z-index: 10;\n  cursor: pointer;\n  margin-bottom: 16px;\n\n  &:hover {\n    background: #000;\n  }\n\n  &:first-child {\n    border-top-left-radius: 50px;\n    border-bottom-left-radius: 50px;\n    border-right: 1px solid #333;\n  }\n\n  &:last-child {\n    border-top-right-radius: 50px;\n    border-bottom-right-radius: 50px;\n    border-right: none;\n  }\n\n  &:disabled,\n  &:disabled:hover {\n    cursor: default;\n    background: #999;\n    color: #000 !important;\n  }\n`;\n"],"sourceRoot":""}