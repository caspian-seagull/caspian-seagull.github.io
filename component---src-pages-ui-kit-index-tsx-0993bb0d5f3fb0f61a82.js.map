{"version":3,"sources":["webpack:///./src/images/svg/moon.svg","webpack:///./src/components/SocialLinks/styles.tsx","webpack:///./src/components/SocialLinks/index.tsx","webpack:///./src/sketches/medusa/sketchSettings.ts","webpack:///./src/hooks/usePersonData.ts","webpack:///./src/components/RangeInput/styles.ts","webpack:///./src/components/RangeInput/index.tsx","webpack:///./src/components/Group/index.tsx","webpack:///./src/components/Toggle/kit.tsx","webpack:///./src/components/RangeInput/kit.tsx","webpack:///./src/components/PageTitle/kit.tsx","webpack:///./src/components/SocialLinks/kit.tsx","webpack:///./src/components/SettingsPanel/kit.tsx","webpack:///./src/pages/ui-kit/index.tsx","webpack:///./src/layouts/Common/index.tsx","webpack:///./src/utils/keysToArray.ts","webpack:///./src/components/Toggle/styles.tsx","webpack:///./src/components/Toggle/index.tsx","webpack:///./src/components/SettingsPanel/styles.tsx","webpack:///./src/components/SettingsPanel/controls.tsx","webpack:///./src/components/SettingsPanel/index.tsx"],"names":["React","Moon","props","createElement","defaultProps","module","exports","default","SocialLinks$","styled","nav","SocialLink$","a","UnderlineText","color","Colors","CSS","blue20","position","blue60","SocialLinks","links","map","key","title","url","target","href","sketchSettings","polygonsNumber","type","value","min","max","step","thickness","phaseOffset","amplitude","gap","vertices","frequency","speed","showLines","showPolygons","usePersonDataEn","RangeWrapper$","div","theme","showLimits","text","Easings","quadratic","bg","withLabel","Label$","gray80","InputElement$","input","gray20","isWide","showValue","blue","thumbSize","gray40","getValueOffset","thumbOffset","css","ValueNumber$","span","Limits$","gray60","RangeInput","label","handleChange","initialValue","values","useState","setValue","rangeDiff","toFixed","onChange","e","Number","currentTarget","Group","children","Group$","GroupTitle$","GroupDivider$","hr","gray10","GroupGrid$","Media","Tablet","Phone","ToggleKit","Toggle","defaultValue","console","log","withText","RangeInputKit","demovalue","setDemovalue","userData","PageTitle","subtitle","imageSrc","person","image","resolutions","src","imageSrcSet","srcSet","github","email","cv","twitter","instagram","keysToArray","object","keyName","valueName","SettingsPanel","settings","Page$","UiKit","Common","GroupGridWithMargin$","CommonLayout","Body$","array","push","ToggleWrapper$","Toggle$","button","Pin$","isActive","Icon$","setState","onClick","Layout$","SettingsHeader$","SettingsControls$","showControls","SettingsItem$","Controls","range","item","updateValue","toggle","Boolean","setShowControls","setSettings","updateSettingsItemValue","updatedItem","useEffect","settingsTransformer","toObject","Object","keys"],"mappings":"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","file":"component---src-pages-ui-kit-index-tsx-0993bb0d5f3fb0f61a82.js","sourcesContent":["var React = require('react');\n\nfunction Moon (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M0.505492 8.6832C0.612692 8.5512 0.792692 8.5024 0.951092 8.5592C1.39509 8.7184 1.87669 8.8 2.38389 8.8C4.81029 8.8 6.78389 6.8256 6.78389 4.4C6.78389 2.94 6.06309 1.5808 4.85589 0.7632C4.71909 0.6704 4.65349 0.5032 4.69029 0.3424C4.72709 0.1816 4.85909 0.06 5.02309 0.036C5.21029 0.0088 5.39669 0 5.58389 0C8.89269 0 11.5839 2.6912 11.5839 6C11.5839 9.3088 8.89269 12 5.58389 12C3.48389 12 1.57349 10.9328 0.475093 9.1456C0.386293 9.0008 0.399092 8.816 0.505492 8.6832Z\",\"fill\":\"currentColor\"}));\n}\n\nMoon.defaultProps = {\"width\":\"12\",\"height\":\"12\",\"viewBox\":\"0 0 12 12\",\"fill\":\"none\"};\n\nmodule.exports = Moon;\n\nMoon.default = Moon;\n","import styled from 'styled-components'\nimport { UnderlineText, Colors } from 'constants/Styles'\n\nexport const SocialLinks$ = styled.nav`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  position: relative;\n`\n\nexport const SocialLink$ = styled.a`\n  font-size: 12px;\n  line-height: 1.5;\n  font-weight: 500;\n  margin-right: 16px;\n  position: relative;\n  ${UnderlineText({ color: Colors.CSS.blue20, position: 1.3 })}\n\n  &:hover {\n    ${UnderlineText({ color: Colors.CSS.blue60, position: 1.3 })}\n  }\n\n  &::after {\n    content: '•';\n    position: absolute;\n    display: inline;\n    right: -10px;\n    color: ${Colors.CSS.blue60};\n    pointer-events: none;\n  }\n\n  &:last-child::after {\n    display: none;\n  }\n`","import React from 'react'\nimport { SocialLinks$, SocialLink$ } from './styles'\n\ninterface SocialLinksPropsI {\n  links: {\n    title?: string,\n    url?: string\n  }[]\n}\n\nconst SocialLinks: React.FunctionComponent<SocialLinksPropsI> = ({ links = [] }) => {\n  return (\n    <SocialLinks$>\n      {links.map(({ title, url }, key) => (\n        <SocialLink$ key={key} target='_blank' href={url}>{title}</SocialLink$>\n      ))}\n    </SocialLinks$>\n  )\n}\n\nexport default SocialLinks","const sketchSettings: ISettingsList = {\n  polygonsNumber: {\n    type: 'range',\n    value: 50,\n    props: {\n      min: 1,\n      max: 100,\n      step: 1\n    },\n    title: 'Length'\n  },\n\n  thickness: {\n    type: 'range',\n    value: 2,\n    props: {\n      min: 1,\n      max: 4,\n      step: 0.5\n    },\n    title: 'Thickness'\n  },\n\n  phaseOffset: {\n    type: 'range',\n    value: 3,\n    props: {\n      min: 0,\n      max: 50,\n      step: 1\n    },\n    title: 'Phase offset'\n  },\n\n  amplitude: {\n    type: 'range',\n    value: 21,\n    props: {\n      min: 0,\n      max: 60,\n      step: 0.5\n    },\n    title: 'Amplitude'\n  },\n\n  gap: {\n    type: 'range',\n    value: 5,\n    props: {\n      min: 5,\n      max: 30,\n      step: 1\n    },\n    title: 'Gap'\n  },\n\n  vertices: {\n    type: 'range',\n    value: 8,\n    props: {\n      min: 1, \n      max: 20,\n      step: 1\n    },\n    title: 'Vertices'\n  },\n\n  frequency: {\n    type: 'range',\n    value: 1,\n    props: {\n      min: 0, \n      max: 10,\n      step: 0.1\n    },\n    title: 'Frequency'\n  },\n\n  speed: {\n    type: 'range',\n    value: 1,\n    props: {\n      min: 0.05, \n      max: 2,\n      step: 0.05\n    },\n    title: 'Speed'\n  },\n\n  showLines: {\n    type: 'toggle',\n    value: false,\n    props: {},\n    title: 'Show lines'\n  },\n\n  showPolygons: {\n    type: 'toggle',\n    value: false,\n    props: {},\n    title: 'Show polygons'\n  }\n}\n\nexport default sketchSettings","import { useStaticQuery, graphql } from 'gatsby'\n\nconst usePersonDataEn = (): ContentfulPersonI => useStaticQuery(graphql`\n  query PersonDataEn {\n    person: contentfulPerson(node_locale: {eq: \"en-US\"}) {\n      name\n      position\n      shortBio {\n        shortBio\n      }\n      image {\n        resolutions(width: 128, toFormat: PNG) {\n          srcSet\n          src\n        }\n      }\n      github\n      email\n      cv\n      twitter\n      instagram\n    }\n  }\n`)\n\nexport default usePersonDataEn","import styled, { css } from 'styled-components'\nimport { Colors, Easings } from 'constants/Styles'\n\nconst gapSize = 15\nconst thumbSize = 28\n\ninterface RangeThemePropsI {\n  theme: {\n    showValue: boolean,\n    isWide: boolean,\n    thumbOffset: number,\n    showLimits: boolean,\n    withLabel: boolean\n  }\n}\n\nexport const RangeWrapper$ = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  cursor: pointer;\n  margin-bottom: ${({ theme }) => theme.showLimits ? 14 : 0}px;\n\n  span {\n    color: ${Colors.CSS.text};\n    transition: color .2s ease, transform .2s ${Easings.quadratic};\n  }\n\n  &:focus-within:not(:hover) {\n    span {\n      color: ${Colors.CSS.bg};\n    }\n  }\n\n  &:hover {\n    span {\n      transform: ${({ theme }: RangeThemePropsI) => !theme.withLabel && `translateY(-${thumbSize - 2}px)` };\n    }\n  }\n`\n\nexport const Label$ = styled.div`\n  font-size: 12px;\n  line-height: 1.5;\n  font-weight: 500;\n  font-family: sans-serif;\n  color: ${Colors.CSS.gray80};\n`\n\nexport const InputElement$ = styled.input`\n  width: 100%;\n  height: ${thumbSize}px;\n  background: transparent;\n  -webkit-appearance: none;\n\n  &[type=range]:focus {\n    outline: none;\n  }\n\n  /* #region webkit styles */\n  &[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 4px;\n    cursor: pointer;\n    background: ${Colors.CSS.gray20};\n    border-radius: 2px;\n  }\n  \n  &[type=range]::-webkit-slider-thumb {\n    border: none;\n    height: ${thumbSize}px;\n    width: ${({ theme: { isWide, showValue }}: RangeThemePropsI) => thumbSize * (isWide && showValue ? 2 : 1)}px;\n    border-radius: ${thumbSize}px;\n    background: ${Colors.CSS.bg};\n    box-shadow: 0 0 0 3px ${Colors.CSS.blue} inset;\n    cursor: move;\n    border: 0px solid #000000;\n    -webkit-appearance: none;\n    transition: box-shadow .2s ease, width .3s ${Easings.quadratic};\n    position: relative;\n    top: -${thumbSize/2 - 2}px;\n  }\n  \n  &[type=range]:focus::-webkit-slider-runnable-track {\n    background: ${Colors.CSS.gray40};\n  }\n  /*#endregion */\n\n  /* region Firefox styles */\n  &[type=range]::-moz-range-track {\n    width: 100%;\n    height: 4px;\n    cursor: pointer;\n    background: ${Colors.CSS.gray20};\n    border-radius: 2px;\n  }\n\n  &[type=range]::-moz-range-thumb {\n    border: none;\n    height: ${thumbSize}px;\n    width: ${({ theme: { isWide, showValue }}: RangeThemePropsI) => thumbSize * (isWide && showValue ? 2 : 1)}px;\n    border-radius: ${thumbSize}px;\n    background: ${Colors.CSS.bg};\n    box-shadow: 0 0 0 3px ${Colors.CSS.blue} inset;\n    cursor: move;\n    transition: box-shadow .2s ease, width .3s ${Easings.quadratic};\n  }\n  /* #endregion */\n\n  &:focus,\n  &:hover {\n    &[type=range]::-moz-range-thumb {\n      box-shadow: 0 0 0 ${({ theme }) => theme.showValue ? thumbSize : 9}px ${Colors.CSS.blue} inset;\n    }\n\n    &[type=range]::-webkit-slider-thumb {\n      box-shadow: 0 0 0 ${({ theme }) => theme.showValue ? thumbSize : 9}px ${Colors.CSS.blue} inset;\n    }\n  }\n`\n\nconst getValueOffset = ({ theme: { isWide, showValue, thumbOffset} }: RangeThemePropsI) => {\n  return css`\n    left: calc((100% - ${thumbSize * (isWide && showValue ? 2 : 1)}px) * ${thumbOffset} + 2px);\n  `\n}\n\nexport const ValueNumber$ = styled.span`\n  font-size: 10px;\n  line-height: ${thumbSize}px;\n  text-align: center;\n  font-weight: 500;\n  color: ${Colors.CSS.blue};\n  width: ${({ theme: { isWide, showValue } }) => thumbSize * (isWide && showValue ? 2 : 1)}px;\n  height: ${thumbSize}px;\n  position: absolute;\n  bottom: 2px;\n  pointer-events: none;\n  ${getValueOffset};\n`\n\nexport const Limits$ = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: -10px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 10px;\n  color: ${Colors.CSS.gray60};\n  pointer-events: none;\n  line-height: 1;\n`","import React, { useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { InputElement$, RangeWrapper$, Label$, ValueNumber$, Limits$ } from './styles'\n\nexport interface RangePropsI {\n  values: [number, number, number]\n  initialValue?: number\n  handleChange: (value: number) => void\n  label?: string\n  showValue?: boolean\n  showLimits?: boolean\n}\n\nconst RangeInput: React.FunctionComponent<RangePropsI & React.HTMLAttributes<HTMLInputElement>> = ({\n  label, handleChange, showValue, showLimits, initialValue, values\n}) => {\n  const [value, setValue] = useState(initialValue || values[0])\n\n  const _handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const value = Number(e.currentTarget.value)\n    setValue(value)\n    handleChange(value)\n  }\n\n  const rangeDiff = values[1]-values[0]\n  const startValue = value - values[0]\n  const thumbOffset = startValue*100/rangeDiff/100\n\n  const theme = {\n    showLimits,\n    showValue,\n    withLabel: !!label,\n    thumbOffset: thumbOffset.toFixed(2),\n    isWide: value >= 1000,\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <RangeWrapper$>\n        {label && <Label$>{label}</Label$>}\n\n        {showLimits && (\n          <Limits$>\n            <div>{values[0]}</div>  \n            <div>{values[1]}</div>  \n          </Limits$>\n        )}\n        \n        <InputElement$\n          value={value}\n          onChange={_handleChange}\n          type='range'\n          min={values[0]}\n          max={values[1]}\n          step={values[2]}\n        />\n\n        {showValue && <ValueNumber$>{value}</ValueNumber$>}\n      </RangeWrapper$>\n    </ThemeProvider>\n  )\n}\n\nexport default RangeInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors } from 'constants/Styles'\nimport Media from 'utils/Media'\n\ninterface GroupPropsI {\n  title?: string\n}\n\nconst Group: React.FunctionComponent<GroupPropsI> = ({ children, title }) => {\n  return (\n    <Group$>\n      {title && <GroupTitle$>{title}</GroupTitle$>}\n      {children}\n    </Group$>\n  )\n}\n\nexport default Group\n\nconst Group$ = styled.div`\n  margin: 32px 0;\n  padding: 16px;\n  border: 1px solid ${Colors.CSS.gray20};\n  border-radius: 6px;\n  position: relative;\n\n  &:first-child {\n    margin-top: 0;\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n\nconst GroupTitle$ = styled.div`\n  position: absolute;\n  top: -8px;\n  left: 12px;\n  background: ${Colors.CSS.bg};\n  color: ${Colors.CSS.gray60};\n  padding: 0 4px;\n  font-size: 10px;\n  font-weight: 600;\n  text-transform: uppercase;\n  line-height: 1;\n`\n\nexport const GroupDivider$ = styled.hr`\n  margin: 16px 0;\n  border: none;\n  height: 1px;\n  background: ${Colors.CSS.gray10};\n`\n\n\nexport const GroupGrid$ = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 32px;\n\n  ${Group$} {\n    margin: 0;\n  }\n\n  ${Media.Tablet`\n    grid-template-columns: 1fr 1fr;\n  `}\n\n  ${Media.Phone`\n    grid-template-columns: 1fr;\n  `}\n`","import React from 'react'\nimport Toggle from '.'\nimport Group, { GroupDivider$ } from 'components/Group'\nimport MoonIcon from 'images/svg/moon.svg'\n\nconst ToggleKit = () => (\n  <Group title='Toggle'>\n    <Toggle defaultValue={true} onChange={console.log} />\n    <GroupDivider$ />\n    <Toggle label='With label' onChange={console.log} />\n    <GroupDivider$ />\n    <Toggle label='With text' withText onChange={console.log} />\n    <GroupDivider$ />\n    <Toggle label='With icon' onChange={console.log}>\n      <MoonIcon />\n    </Toggle>\n  </Group>\n)\n\nexport default ToggleKit","import React, { useState } from 'react'\nimport RangeInput from '.'\nimport Group, { GroupDivider$ } from 'components/Group'\n\nconst RangeInputKit = () => {\n  const [demovalue, setDemovalue] = useState(0)\n\n  return (\n    <Group title='Range slider'>\n      <RangeInput\n        handleChange={() => false}\n        values={[1, 100, 1]}\n      />\n      <GroupDivider$ />\n      <RangeInput\n        handleChange={setDemovalue}\n        values={[0, 5000, 100]}\n        label={`With label, value: ${demovalue}`}\n      />\n      <GroupDivider$ />\n      <RangeInput\n        initialValue={100}\n        handleChange={() => false}\n        values={[0, 2000, 100]}\n        showValue\n      />\n      <GroupDivider$ />\n      <RangeInput\n        initialValue={140}\n        handleChange={() => false}\n        values={[10, 550, 10]}\n        showValue\n        showLimits\n      />\n    </Group>\n  )\n}\n\nexport default RangeInputKit","import React from 'react'\nimport PageTitle from '.'\nimport Group, { GroupDivider$ } from 'components/Group'\nimport usePersonDataEn from 'hooks/usePersonData'\n\nconst ToggleKit = () => {\n  const userData = usePersonDataEn()\n\n  return (\n    <Group title='Page title'>\n      <PageTitle title=\"Custom page title\" subtitle=\"Page subtitle or tags\"/>\n      <GroupDivider$ />\n      <PageTitle\n        imageSrc={userData.person.image.resolutions.src}\n        imageSrcSet={userData.person.image.resolutions.srcSet}\n        title=\"Ismail Magomedov\"\n        subtitle=\"Frontend developer\"\n      />\n    </Group>\n  )\n}\n\nexport default ToggleKit","import React from 'react'\nimport SocialLinks from '.'\nimport Group from 'components/Group'\nimport usePersonDataEn from 'hooks/usePersonData'\nimport keysToArray from 'utils/keysToArray'\n\nconst ToggleKit = () => {\n  const { github, email, cv, twitter, instagram } = usePersonDataEn().person\n\n  return (\n    <Group title='Social links'>\n      <SocialLinks links={keysToArray({\n        object: { github, email, cv, twitter, instagram },\n        keyName: 'title',\n        valueName: 'url'\n      })}/>\n    </Group>\n  )\n}\n\nexport default ToggleKit","import React from 'react'\nimport SettingsPanel from '.'\nimport Group from 'components/Group'\nimport sketchSettings from 'sketches/medusa/sketchSettings'\n\nconst ToggleKit = () => {\n\n  return (\n    <Group title='Page title'>\n      <SettingsPanel\n        settings={sketchSettings}\n        onChange={console.log}\n      />\n    </Group>\n  )\n}\n\nexport default ToggleKit","import React from 'react'\nimport styled from 'styled-components'\nimport CommonLayout from 'layouts/Common'\nimport { Colors } from 'constants/Styles'\nimport { GroupGrid$ } from 'components/Group'\nimport PageTitle from 'components/PageTitle'\n\nimport ToggleKit from 'components/Toggle/kit'\nimport RangeInputKit from 'components/RangeInput/kit'\nimport PageTitleKit from 'components/PageTitle/kit'\nimport SocialLinksKit from 'components/SocialLinks/kit'\nimport SettingsPanel from 'components/SettingsPanel/kit'\n\nconst UiKit = () => {\n  return (\n    <CommonLayout>\n      <Page$>\n        <PageTitle title='UI' />\n\n        <GroupGridWithMargin$>\n          <ToggleKit />\n          <RangeInputKit />\n          <PageTitleKit />\n          <SocialLinksKit />\n          <SettingsPanel />\n        </GroupGridWithMargin$>\n      </Page$> \n    </CommonLayout>\n  )\n}\n\nexport default UiKit\n\nconst Page$ = styled.div`\n  min-height: 100vh;\n  background: ${Colors.CSS.bg};\n`\n\nconst GroupGridWithMargin$ = styled(GroupGrid$)`\n  margin-top: 32px;\n`","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors, GlobalStyles$ } from 'constants/Styles';\nimport Media from 'utils/Media'\n\nconst CommonLayout: React.FunctionComponent = (props) => {\n  return (\n    <Body$>\n      <GlobalStyles$ />\n      {props.children}\n    </Body$>\n  )\n};\n\nexport default CommonLayout\n\nconst Body$ = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background: ${Colors.CSS.bg};\n  padding: 32px;\n\n  ${Media.Phone`\n    padding: 24px 20px;\n  `}\n`;","interface KeysToArrayParametersI {\n  object: {[name: string]: string | number | [] | object | boolean}\n  keyName: string\n  valueName: string\n}\n\nconst keysToArray = ({ object, keyName, valueName }: KeysToArrayParametersI): {}[] => {\n  let array = []\n\n  for (let key in object) {\n    array.push({\n      [keyName]: key,\n      [valueName]: object[key]\n    })\n  }\n\n  return array\n}\n\nexport default keysToArray","import styled from 'styled-components'\nimport { Colors, Easings } from 'constants/Styles'\n\nexport const ToggleWrapper$ = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const Toggle$ = styled.button`\n  position: relative;\n  width: ${({ theme }) => theme.withText ? 62 : 48}px;\n  height: 24px;\n  padding: 4px;\n  border: none;\n  border-radius: 14px;\n  background: ${Colors.CSS.gray10};\n  cursor: pointer;\n`\n\nexport const Pin$ = styled.div`\n  position: absolute;\n  top: 3px;\n  left: 3px;\n  width: ${({ theme }) => theme.withText ? 32 : 18}px;\n  height: 18px;\n  border-radius: 9px;\n  transform: translateX(${({ theme }) => theme.isActive ? 24 : 0}px);\n  background: ${({ theme }) => theme.isActive ? Colors.CSS.bg : Colors.CSS.gray60};\n  transition: all .15s ${Easings.quadratic};\n  text-transform: uppercase;\n  line-height: 18px;\n  font-size: 10px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.isActive ? Colors.CSS.blue : Colors.CSS.bg};\n  box-shadow: 0 0 0 ${({ theme }) => theme.isActive ? 2 : 0}px ${Colors.CSS.blue} inset;\n`\n\nexport const Label$ = styled.span`\n  font-size: 12px;\n  color: ${Colors.CSS.text};\n  margin-right: 8px;\n`\n\nexport const Icon$ = styled.div`\n  width: 12px;\n  height: 12px;\n  position: absolute;\n  top: 2px;\n  left: 3px;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`","import React, { useState } from 'react'\nimport { ToggleWrapper$, Toggle$, Pin$, Icon$, Label$ } from './styles'\nimport { ThemeProvider } from 'styled-components'\n\ninterface TogglePropsI {\n  label?: string\n  defaultValue?: boolean\n  icon?: Element\n  withText?: boolean\n  onChange: (state: boolean) => void\n}\n\nconst Toggle: React.FunctionComponent<TogglePropsI> = ({\n  onChange,\n  withText,\n  defaultValue,\n  label,\n  children\n}) => {\n  const [isActive, setState] = useState(defaultValue)\n\n  const handleClick = () => {\n    setState(!isActive)\n    onChange(!isActive)\n  }\n\n  return (\n    <ThemeProvider theme={{ isActive, withText }}>\n      <ToggleWrapper$>\n        { label && <Label$>{label}</Label$>}\n\n        <Toggle$ onClick={handleClick}>\n          <Pin$>\n            {withText && (\n              <span>{isActive ? 'On' : 'Off'}</span>\n            )}\n\n            <Icon$>{children}</Icon$>\n          </Pin$>\n        </Toggle$>\n      </ToggleWrapper$>\n    </ThemeProvider>\n  )\n}\n\nexport default Toggle\n","import styled from 'styled-components'\nimport { Colors } from 'constants/Styles'\nimport Media from 'utils/Media'\n\nexport const Layout$ = styled.div`\n  width: 280px;\n  background: ${Colors.CSS.bg};\n  border: 1px solid ${Colors.CSS.gray20};\n\n  ${Media.Phone`\n    width: 100%;\n  `}\n`\n\nexport const SettingsHeader$ = styled.button`\n  width: 100%;\n  border: none;\n  background: ${Colors.CSS.gray10};\n  color: ${Colors.CSS.text};\n  padding: 8px 12px;\n  font-size: 10px;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1.5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nexport const SettingsControls$ = styled.div`\n  display: ${({ theme }) => theme.showControls ? 'block' : 'none'};\n  overflow: auto;\n  max-height: 420px;\n  padding: 12px;\n\n\n  ${Media.Phone`\n    max-height: 250px;\n  `}\n`\n\nexport const SettingsItem$ = styled.div`\n  margin-bottom: 16px;\n`","import React from 'react'\nimport RangeInput from 'components/RangeInput'\nimport Toggle from 'components/Toggle'\nimport { SettingsItem$ } from './styles'\n\nconst Controls = {\n  range: (keyName: string, item: ISettingsItem, updateValue: TSettingsItemUpdate): React.ReactNode => {\n    const { min, max, step } = item.props\n  \n    return (\n      <SettingsItem$ key={keyName}>\n        <RangeInput\n          initialValue={Number(item.value)}\n          label={item.title}\n          values={[min, max, step]}\n          handleChange={value => updateValue(keyName, value)}\n          showValue\n        />\n      </SettingsItem$>\n    )\n  },\n\n  toggle: (keyName: string, item: ISettingsItem, updateValue: TSettingsItemUpdate): React.ReactNode => {\n    return (\n      <SettingsItem$ key={keyName}>\n        <Toggle\n          onChange={value => updateValue(keyName, value)}\n          label={item.title}\n          defaultValue={Boolean(item.value)}\n        />\n      </SettingsItem$>\n    )\n  }\n}\n\nexport default Controls","import React, { useState, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport settingsTransformer from 'utils/settingsTransformer'\nimport Controls from './controls'\nimport {\n  Layout$,\n  SettingsControls$,\n  SettingsHeader$\n} from './styles'\n\ninterface SettingsPanelPropsI {\n  settings: ISettingsList\n  showControls?: boolean\n  onChange: (state: object) => void\n}\n\nconst SettingsPanel: React.FunctionComponent<SettingsPanelPropsI> = (props) => {\n  const [showControls, setShowControls] = useState(props.showControls)\n  const [settings, setSettings] = useState(props.settings)\n\n  const updateSettingsItemValue = (key: string, value: TSettingsValues) => {\n    const updatedItem = {\n      ...settings[key],\n      value\n    }\n\n    setSettings({ ...settings, [key]: updatedItem })\n  }\n\n  useEffect(() => {\n    props.onChange(settingsTransformer.toObject(settings))\n  }, [settings])\n\n  return (\n    <ThemeProvider theme={{ showControls }}>\n      <Layout$>\n        <SettingsHeader$ onClick={() => setShowControls(!showControls)}>\n          <span>Settings</span>\n          <span>{showControls ? '–' : '+'}</span>\n        </SettingsHeader$>\n\n        <SettingsControls$>\n          {Object.keys(settings).map(key => {\n            const item = settings[key]\n\n            return Controls[item.type](key, item, updateSettingsItemValue) || null\n          })}    \n        </SettingsControls$>\n      </Layout$>\n    </ThemeProvider>\n  )\n}\n\nexport default SettingsPanel"],"sourceRoot":""}