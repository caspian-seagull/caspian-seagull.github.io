{"version":3,"sources":["webpack:///./src/pages/stereo.tsx","webpack:///./src/layouts/Common/index.tsx","webpack:///./src/constants/Styles.ts","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["Stereo","useState","imageData","setImageData","offset","setOffset","reader","FileReader","Images$","src","toString","Image$","theme","image","type","onChange","event","file","currentTarget","files","readAsDataURL","onload","result","console","log","Number","value","min","max","styled","div","CommonLayout","props","Body$","GlobalStyles$","children","Colors","CSS","bg","createGlobalStyle","SansSerif","CSSColorSchemes","text","Media","Phone","link","UnderlineText","color","blue20","position","blue60","css","Black","opaque","White","Blue","Gray100","gray10","gray20","gray40","gray60","gray80","blue","blue40","blue80","createHTML","url","this"],"mappings":"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","file":"component---src-pages-stereo-tsx-8cb4b42f1a2539d96e92.js","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport CommonLayout from 'layouts/Common'\nimport Title from 'components/Title'\n\nconst Stereo = () => {\n  const [imageData, setImageData] = useState<string | ArrayBuffer>('')\n  const [offset, setOffset] = useState(1)\n  const reader = new FileReader();\n\n\n  const onImageChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    const file = event.currentTarget.files[0]\n    reader.readAsDataURL(file);\n    reader.onload = function () {  \n      setImageData(reader.result)\n      console.log(reader.result)\n    }; \n  }\n\n  const onOffsetChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    const offset = Number(event.currentTarget.value)\n    console.log(offset)\n    setOffset(offset)\n  }\n\n  return (\n    <CommonLayout>\n      <Title>Check Stereo</Title>\n\n      <Images$>\n        <img src={imageData.toString()} />\n        <Image$ theme={{ offset, image: imageData.toString() }} />  \n      </Images$>\n\n      <input type=\"file\" onChange={onImageChange}/>\n\n      <input type=\"range\" onChange={onOffsetChange} min={1} value={offset} max={420} />\n    </CommonLayout>\n  )\n}\n\nexport default Stereo\n\nconst Images$ = styled.div`\n  width: 480px;\n  height: auto;\n  position: relative;\n\n  img {\n    display: block;\n    width: 100%;\n    opacity: 0;\n  }\n`\n\ntype StyledProps = {\n  theme: {\n    image: string,\n    offset: number\n  }\n}\n\nconst Image$ = styled.div`\n  display: block;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: url(${({ theme }: StyledProps) => theme.image}) no-repeat left top, url(${({ theme }: StyledProps) => theme.image}) no-repeat ${({ theme }: StyledProps) => theme.offset || 1}px top;\n  background-size: 100%;\n  will-change: background;\n  transform: translate3d(0);\n  background-blend-mode: difference;\n`","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { SansSerif, UnderlineText, CSSColorSchemes, Colors } from 'constants/Styles';\nimport Media from 'utils/Media'\n\nconst CommonLayout: React.FunctionComponent = (props) => {\n  return (\n    <Body$>\n      <GlobalStyles$ />\n      {props.children}\n    </Body$>\n  )\n};\n\nexport default CommonLayout\n\nconst Body$ = styled.div`\n  width: 100%;\n  min-height: 100%;\n  background: ${Colors.CSS.bg};\n`;\n\nconst GlobalStyles$ = createGlobalStyle`\n  body, html {\n    ${SansSerif}\n    ${CSSColorSchemes}\n    margin: 0;\n    width: 100vw;\n    min-height: 100vh;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n\n  p {\n    font-size: 16px;\n    line-height: 1.5;\n    color: ${Colors.CSS.text};\n    margin: 10px 0;\n\n    &:first-child {\n      margin-top: 0;\n    }\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    ${Media.Phone`\n      font-size: 14px;\n    `}\n  }\n\n  a {\n    color: ${Colors.CSS.link};\n    text-decoration: none;\n    font-weight: 500;\n    ${UnderlineText({ color: Colors.CSS.blue20, position: 1.2 })}\n    \n    &:hover {\n      ${UnderlineText({ color: Colors.CSS.blue60, position: 1.2 })}\n    }\n  }\n`;\n","import { css } from 'styled-components'\n\nexport const SansSerif = css`\n  font-family: 'Montserrat', sans-serif;\n`\n\nexport const Colors = {\n  Black: (opaque: number = 100) => `rgba(0, 0, 0, ${opaque * 0.01})`,\n  White: (opaque: number = 100) => `rgba(255, 255, 255, ${opaque * 0.01})`,\n  Blue:  (opaque: number = 100) => `rgba(0, 166, 200, ${opaque * 0.01})`,\n  \n  Gray100: '#FAFAFA',\n\n  CSS: {\n    gray10: 'var(--colors-gray10)',\n    gray20: 'var(--colors-gray20)',\n    gray40: 'var(--colors-gray40)',\n    gray60: 'var(--colors-gray60)',\n    gray80: 'var(--colors-gray80)',\n\n    blue:   'var(--colors-blue)',\n    blue20: 'var(--colors-blue20)',\n    blue40: 'var(--colors-blue40)',\n    blue60: 'var(--colors-blue60)',\n    blue80: 'var(--colors-blue80)',\n\n    bg:     'var(--colors-bg)',\n    text:   'var(--colors-text)',\n    link:   'var(--colors-link)'\n  }\n}\n\nexport const darkMedia = 'prefers-color-scheme: dark'\n\nexport const CSSColorSchemes = css`\n  --colors-bg:   ${Colors.Gray100};\n  --colors-text: ${Colors.Black(90)};\n  --colors-link: ${Colors.Blue()};\n\n  --colors-blue: ${Colors.Blue()};\n  --colors-blue20: ${Colors.Blue(20)};\n  --colors-blue40: ${Colors.Blue(40)};\n  --colors-blue60: ${Colors.Blue(60)};\n  --colors-blue80: ${Colors.Blue(80)};\n\n  --colors-gray10: ${Colors.Black(10)};\n  --colors-gray20: ${Colors.Black(20)};\n  --colors-gray40: ${Colors.Black(40)};\n  --colors-gray60: ${Colors.Black(60)};\n  --colors-gray80: ${Colors.Black(80)};\n\n  @media (${darkMedia}) {\n    --colors-bg:   ${Colors.Black(90)};\n    --colors-text: ${Colors.White(90)};\n\n    --colors-gray10: ${Colors.White(10)};\n    --colors-gray20: ${Colors.White(20)};\n    --colors-gray40: ${Colors.White(40)};\n    --colors-gray60: ${Colors.White(60)};\n    --colors-gray80: ${Colors.White(80)};\n  }\n`\n\nexport const UnderlineText = ({\n  color = 'currentColor',\n  position = 1.05\n} : {\n  color: string,\n  position: number\n}) => css`\n  background-image: linear-gradient(to right, ${color} 100%, ${color} 0%);\n  background-position: 0 ${position}em;\n  background-repeat: repeat-x;\n  background-size: 1px 0.5px;\n`","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}